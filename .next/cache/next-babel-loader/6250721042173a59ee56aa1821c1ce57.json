{"ast":null,"code":"var _jsxFileName = \"/Users/diegotauchert/Projects/GITHUB/netflix/pages/components/FeaturedMovie.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport './FeaturedMovie.css';\nexport default (({\n  item\n}) => {\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n\n  for (let i in item.genres) {\n    genres.push(item.genres[i].name);\n  }\n\n  let description = item.overview;\n\n  if (description.length > 200) {\n    description = description.substring(0, 200) + '...';\n  }\n\n  return __jsx(\"section\", {\n    className: \"featured\",\n    style: {\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"featured--vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"featured--horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"featured--name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, item.original_name), __jsx(\"div\", {\n    className: \"featured--info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"featured--points\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, item.vote_average), __jsx(\"div\", {\n    className: \"featured--year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, firstDate.getFullYear()), __jsx(\"div\", {\n    className: \"featured--seasons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, item.number_of_seasons, \" temporada\", item.number_of_seasons !== 1 ? 's' : '')), __jsx(\"div\", {\n    className: \"featured--description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, description), __jsx(\"div\", {\n    className: \"featured--buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: `/watch/${item.id}`,\n    title: \"\\u25B6\\uFE0E Assistir\",\n    className: \"featured--watchbutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"\\u25B6\\uFE0E Assistir\"), __jsx(\"a\", {\n    href: `/addList/${item.id}`,\n    title: \"+ Minha Lista\",\n    className: \"featured--mylistbutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"+ Minha Lista\")), __jsx(\"div\", {\n    className: \"featured--genres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"G\\xEAneros:\"), \" \", genres.join(', ')))));\n});","map":{"version":3,"sources":["/Users/diegotauchert/Projects/GITHUB/netflix/pages/components/FeaturedMovie.js"],"names":["React","item","firstDate","Date","first_air_date","genres","i","push","name","description","overview","length","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","id","join"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AAEA,gBAAe,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAEzB,MAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,cAAd,CAAhB;AAEA,MAAIC,MAAM,GAAE,EAAZ;;AACA,OAAI,IAAIC,CAAR,IAAaL,IAAI,CAACI,MAAlB,EAAyB;AACvBA,IAAAA,MAAM,CAACE,IAAP,CAAYN,IAAI,CAACI,MAAL,CAAYC,CAAZ,EAAeE,IAA3B;AACD;;AAED,MAAIC,WAAW,GAAGR,IAAI,CAACS,QAAvB;;AAEA,MAAGD,WAAW,CAACE,MAAZ,GAAqB,GAAxB,EAA4B;AAC1BF,IAAAA,WAAW,GAAGA,WAAW,CAACG,SAAZ,CAAsB,CAAtB,EAAwB,GAAxB,IAA6B,KAA3C;AACD;;AAED,SACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAE;AACnCC,MAAAA,cAAc,EAAE,OADmB;AAEnCC,MAAAA,kBAAkB,EAAE,QAFe;AAGnCC,MAAAA,eAAe,EAAG,0CAAyCd,IAAI,CAACe,aAAc;AAH3C,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCf,IAAI,CAACgB,aAAtC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmChB,IAAI,CAACiB,YAAxC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiChB,SAAS,CAACiB,WAAV,EAAjC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoClB,IAAI,CAACmB,iBAAzC,gBAAsEnB,IAAI,CAACmB,iBAAL,KAA2B,CAA3B,GAA+B,GAA/B,GAAqC,EAA3G,CAHF,CAFF,EAOE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCX,WAAxC,CAPF,EAQE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAG,UAASR,IAAI,CAACoB,EAAG,EAA3B;AAA8B,IAAA,KAAK,EAAC,uBAApC;AAAkD,IAAA,SAAS,EAAC,uBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAG,IAAA,IAAI,EAAG,YAAWpB,IAAI,CAACoB,EAAG,EAA7B;AAAgC,IAAA,KAAK,EAAC,eAAtC;AAAsD,IAAA,SAAS,EAAC,wBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CARF,EAYE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,OAC6BhB,MAAM,CAACiB,IAAP,CAAY,IAAZ,CAD7B,CAZF,CADF,CALF,CADF;AA0BD,CAzCD","sourcesContent":["import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n\n  let firstDate = new Date(item.first_air_date);\n\n  let genres= [];\n  for(let i in item.genres){\n    genres.push(item.genres[i].name);\n  }\n\n  let description = item.overview;\n\n  if(description.length > 200){\n    description = description.substring(0,200)+'...';\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{item.original_name}</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">{item.vote_average}</div>\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : '' }</div>\n          </div>\n          <div className=\"featured--description\">{description}</div>\n          <div className=\"featured--buttons\">\n            <a href={`/watch/${item.id}`} title=\"▶︎ Assistir\" className=\"featured--watchbutton\">▶︎ Assistir</a>\n            <a href={`/addList/${item.id}`} title=\"+ Minha Lista\" className=\"featured--mylistbutton\">+ Minha Lista</a>\n          </div>\n          <div className=\"featured--genres\">\n            <strong>Gêneros:</strong> {genres.join(', ')}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}