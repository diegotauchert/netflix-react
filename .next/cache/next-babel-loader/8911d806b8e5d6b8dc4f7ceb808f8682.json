{"ast":null,"code":"var _jsxFileName = \"/Users/diegotauchert/Projects/GITHUB/netflix/pages/App.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport Tmdb from \"./Tmdb\";\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport Header from './components/Header';\nimport './App.css';\nexport default (() => {\n  const {\n    0: movieList,\n    1: setMovieList\n  } = useState([]);\n  const {\n    0: featuredData,\n    1: setFeaturedData\n  } = useState(null);\n  const {\n    0: blackHeader,\n    1: setBlackHeader\n  } = useState(false);\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //filtrando apenas os filmes originais netflix\n\n      let originals = list.filter(i => i.slug === 'originals'); // gerando um numero aleatorio de acordo com o objeto de filmes originais\n\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1)); // pegando um filme aleatorio a partir do numero randomico\n\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo); //console.log(originals, randomChosen, chosen, chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    black: blackHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), featuredData && __jsx(FeaturedMovie, {\n    item: featuredData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(\"section\", {\n    className: \"lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, movieList.map((item, key) => __jsx(MovieRow, {\n    key: key,\n    title: item.title,\n    items: item.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"coracao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"\\u2764\"), \" React Developer Diego Tauchert - Projeto com finalidade de estudo\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 121\n    }\n  }), \"Direito de Imagens para Netflix\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 40\n    }\n  }), \"Dados pegos do site themoviedb.org\"), movieList.length <= 0 && __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"https://cdn.lowgif.com/full/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\",\n    alt: \"Carregando\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/diegotauchert/Projects/GITHUB/netflix/pages/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","Header","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AAEA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACO,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,OAAO,GAAG,YAAY;AAC1B,UAAIC,IAAI,GAAG,MAAMX,IAAI,CAACY,WAAL,EAAjB;AACAP,MAAAA,YAAY,CAACM,IAAD,CAAZ,CAF0B,CAI1B;;AACA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,WAA5B,CAAhB,CAL0B,CAM1B;;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB,CAP0B,CAQ1B;;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAMzB,IAAI,CAAC0B,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACApB,MAAAA,eAAe,CAACkB,UAAD,CAAf,CAX0B,CAY1B;AACD,KAbD;;AAeAf,IAAAA,OAAO;AACR,GAjBQ,EAiBN,EAjBM,CAAT;AAmBAZ,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAM8B,cAAc,GAAG,MAAM;AAC3B,UAAGC,MAAM,CAACC,OAAP,GAAiB,EAApB,EAAuB;AACrBrB,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAFD,MAEK;AACHA,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,KAND;;AAQAoB,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC;AAEA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC;AACD,KAFD;AAGD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEpB,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,YAAY,IACX,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEA,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAAC6B,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAf;AAAoB,IAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,IAAA,KAAK,EAAEF,IAAI,CAACb,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CALF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,wEACkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlH,qCAEiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjC,uCAXF,EAiBGjB,SAAS,CAACmB,MAAV,IAAoB,CAApB,IACD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,uGAAT;AAAiH,IAAA,GAAG,EAAC,YAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBF,CADF;AA0BD,CAlED","sourcesContent":["/* eslint-disable */\n\nimport React, { useEffect, useState } from \"react\";\nimport Tmdb from \"./Tmdb\";\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport Header from './components/Header';\nimport './App.css'\n\nexport default () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //filtrando apenas os filmes originais netflix\n      let originals = list.filter(i => i.slug === 'originals');\n      // gerando um numero aleatorio de acordo com o objeto de filmes originais\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      // pegando um filme aleatorio a partir do numero randomico\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n      //console.log(originals, randomChosen, chosen, chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n      {featuredData && \n        <FeaturedMovie item={featuredData} />\n      }\n      <section className=\"lists\"> \n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        <span role=\"img\" aria-label=\"coracao\">‚ù§</span> React Developer Diego Tauchert - Projeto com finalidade de estudo<br />\n        Direito de Imagens para Netflix<br />\n        Dados pegos do site themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 && \n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/full/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"Carregando\" />\n      </div>\n      }\n      \n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}