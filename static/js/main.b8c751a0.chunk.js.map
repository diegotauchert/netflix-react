{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listWidth","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","setInterval","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8c751a0.chunk.js","sourcesContent":["const API_KEY = \"9f637a757e27787397137fc6194fb0a6\";\nconst API_BASE = \"https://api.themoviedb.org/3\";\nconst API_LANG = \"pt-BR\";\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = req.json();\n\n  return json;\n};\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: \"originals\",\n        title: \"Originais do Netflix\",\n        items: await basicFetch(\n          `/discover/tv?with_network=213&language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"trending\",\n        title: \"Recomendados para Você\",\n        items: await basicFetch(\n          `/trending/all/week?language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"toprated\",\n        title: \"Em Alta\",\n        items: await basicFetch(\n          `/movie/top_rated?language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"action\",\n        title: \"Ação\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=28&language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"comedy\",\n        title: \"Comédia\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=35&language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"horror\",\n        title: \"Terror\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=27&language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"romance\",\n        title: \"Romance\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=10749&language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"documentary\",\n        title: \"Documentário\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=99&language=${API_LANG}&api_key=${API_KEY}`\n        ),\n      },\n    ];\n  },\n\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if(movieId){\n      switch(type){\n        case 'movie':\n          info = await basicFetch(\n            `/movie/${movieId}?language=${API_LANG}&api_key=${API_KEY}`);\n          break;\n        case 'tv':\n          info = await basicFetch(\n            `/tv/${movieId}?language=${API_LANG}&api_key=${API_KEY}`);\n          break;\n        default:\n          info = null;\n          break;\n      }\n    }\n\n    return info;\n  }\n};\n","import React, {useState} from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n\n  const [scrollX, setScrollX] = useState(0);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n\n    if(x > 0){\n      x = 0;\n    }\n\n    setScrollX(x);\n  }\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n\n    let listWidth = items.results.length * 150;\n    if((window.innerWidth - listWidth) > x){\n      x = (window.innerWidth - listWidth) - 60;\n    }\n\n    setScrollX(x);\n  }\n\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{fontSize: 50}} />\n      </div>\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\n        <NavigateNextIcon style={{fontSize: 50}} />\n      </div>\n\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{\n          marginLeft: scrollX,\n          width: items.results.length * 150\n        }}>\n          {items.results.length > 0 && items.results.map((item,key) => (\n            <div key={key} className=\"movieRow--item\">\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} title={item.original_title} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n\n  let firstDate = new Date(item.first_air_date);\n\n  let genres= [];\n  for(let i in item.genres){\n    genres.push(item.genres[i].name);\n  }\n\n  let description = item.overview;\n\n  if(description.length > 200){\n    description = description.substring(0,200)+'...';\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{item.original_name}</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">{item.vote_average}</div>\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : '' }</div>\n          </div>\n          <div className=\"featured--description\">{description}</div>\n          <div className=\"featured--buttons\">\n            <a href={`/watch/${item.id}`} title=\"▶︎ Assistir\" className=\"featured--watchbutton\">▶︎ Assistir</a>\n            <a href={`/addList/${item.id}`} title=\"+ Minha Lista\" className=\"featured--mylistbutton\">+ Minha Lista</a>\n          </div>\n          <div className=\"featured--genres\">\n            <strong>Gêneros:</strong> {genres.join(', ')}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}","import React from 'react';\nimport './Header.css';\n\nexport default ({black}) =>{\n  return (\n    <header className={black ? 'black' : ''}>\n      <div className=\"header--logo\">\n        <a href=\"/\">\n          <img src=\"https://www.tmf-group.com/-/media/images/logos/case-study-logos/netflix.png\" alt=\"Nexflix\"/>\n        </a>\n      </div>\n      <div className=\"header--user\">\n        <a href=\"/\">\n          <img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/84c20033850498.56ba69ac290ea.png\" alt=\"User\"/>\n        </a>\n      </div>\n    </header>\n  );\n}","/* eslint-disable */\n\nimport React, { useEffect, useState } from \"react\";\nimport Tmdb from \"./Tmdb\";\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport Header from './components/Header';\nimport './App.css'\n\nexport default () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //filtrando apenas os filmes originais netflix\n      let originals = list.filter(i => i.slug === 'originals');\n      // gerando um numero aleatorio de acordo com o objeto de filmes originais\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      // pegando um filme aleatorio a partir do numero randomico\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n    \n    setInterval(() => {\n      loadAll();\n    }, 6000);\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n      {featuredData && \n        <FeaturedMovie item={featuredData} />\n      }\n      <section className=\"lists\"> \n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        <span role=\"img\" aria-label=\"coracao\">❤</span> React Developer Diego Tauchert - Projeto com finalidade de estudo<br />\n        Direito de Imagens para Netflix<br />\n        Dados pegos do site themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 && \n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/full/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"Carregando\" />\n      </div>\n      }\n      \n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}